basePath: /
definitions:
  account.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  account.loginResponse:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  account.profileResponse:
    properties:
      name:
        type: string
    type: object
  client.callRequest:
    properties:
      endpoint:
        type: string
      request:
        type: string
      service:
        type: string
      timeout:
        type: integer
      version:
        type: string
    required:
    - endpoint
    - service
    type: object
  client.healthCheckRequest:
    properties:
      address:
        type: string
      service:
        type: string
      timeout:
        type: integer
      version:
        type: string
    required:
    - address
    - service
    - version
    type: object
  client.publishRequest:
    properties:
      message:
        type: string
      topic:
        type: string
    required:
    - message
    - topic
    type: object
  registry.getNodeListResponse:
    properties:
      services:
        items:
          $ref: '#/definitions/registry.registryServiceNodes'
        type: array
    type: object
  registry.getServiceDetailResponse:
    properties:
      services:
        items:
          $ref: '#/definitions/registry.registryService'
        type: array
    type: object
  registry.getServiceHandlersResponse:
    properties:
      handlers:
        items:
          $ref: '#/definitions/registry.registryEndpoint'
        type: array
    type: object
  registry.getServiceListResponse:
    properties:
      services:
        items:
          $ref: '#/definitions/registry.registryServiceSummary'
        type: array
    required:
    - services
    type: object
  registry.getServiceSubscribersResponse:
    properties:
      subscribers:
        items:
          $ref: '#/definitions/registry.registryEndpoint'
        type: array
    type: object
  registry.registryEndpoint:
    properties:
      metadata:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      request:
        $ref: '#/definitions/registry.registryValue'
      response:
        $ref: '#/definitions/registry.registryValue'
      stream:
        type: boolean
    required:
    - name
    - request
    type: object
  registry.registryNode:
    properties:
      address:
        type: string
      id:
        type: string
      metadata:
        additionalProperties:
          type: string
        type: object
    required:
    - address
    - id
    type: object
  registry.registryNodeDetail:
    properties:
      address:
        type: string
      id:
        type: string
      metadata:
        additionalProperties:
          type: string
        type: object
      version:
        type: string
    required:
    - address
    - id
    - version
    type: object
  registry.registryService:
    properties:
      handlers:
        items:
          $ref: '#/definitions/registry.registryEndpoint'
        type: array
      metadata:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      nodes:
        items:
          $ref: '#/definitions/registry.registryNode'
        type: array
      subscribers:
        items:
          $ref: '#/definitions/registry.registryEndpoint'
        type: array
      version:
        type: string
    required:
    - name
    - version
    type: object
  registry.registryServiceNodes:
    properties:
      name:
        type: string
      nodes:
        items:
          $ref: '#/definitions/registry.registryNodeDetail'
        type: array
    type: object
  registry.registryServiceSummary:
    properties:
      name:
        type: string
      versions:
        items:
          type: string
        type: array
    required:
    - name
    type: object
  registry.registryValue:
    properties:
      name:
        type: string
      type:
        type: string
      values:
        items:
          $ref: '#/definitions/registry.registryValue'
        type: array
    required:
    - name
    - type
    type: object
  statistics.getSummaryResponse:
    properties:
      registry:
        $ref: '#/definitions/statistics.registrySummary'
      services:
        $ref: '#/definitions/statistics.servicesSummary'
    type: object
  statistics.registrySummary:
    properties:
      addrs:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  statistics.servicesSummary:
    properties:
      count:
        type: integer
      nodes_count:
        type: integer
    type: object
info:
  contact: {}
  description: go micro dashboard restful-api
  termsOfService: http://swagger.io/terms/
  title: Go Micro Dashboard
  version: 1.4.0
paths:
  /api/account/login:
    post:
      operationId: account_login
      parameters:
      - description: request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/account.loginRequest'
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/account.loginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Account
  /api/account/profile:
    get:
      operationId: account_profile
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/account.profileResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Account
  /api/client/call:
    post:
      operationId: client_call
      parameters:
      - description: request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/client.callRequest'
      responses:
        "200":
          description: success
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Client
  /api/client/healthcheck:
    post:
      operationId: client_healthCheck
      parameters:
      - description: request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/client.healthCheckRequest'
      responses:
        "200":
          description: success
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Client
  /api/client/publish:
    post:
      operationId: client_publish
      parameters:
      - description: request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/client.publishRequest'
      responses:
        "200":
          description: success
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Client
  /api/registry/service:
    get:
      operationId: registry_getServiceDetail
      parameters:
      - description: service name
        in: query
        name: name
        required: true
        type: string
      - description: service version
        in: query
        name: version
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registry.getServiceDetailResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Registry
  /api/registry/service/handlers:
    get:
      operationId: registry_getServiceHandlers
      parameters:
      - description: service name
        in: query
        name: name
        required: true
        type: string
      - description: service version
        in: query
        name: version
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registry.getServiceHandlersResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Registry
  /api/registry/service/nodes:
    get:
      operationId: registry_getNodes
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registry.getNodeListResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Registry
  /api/registry/service/subscribers:
    get:
      operationId: registry_getServiceSubscribers
      parameters:
      - description: service name
        in: query
        name: name
        required: true
        type: string
      - description: service version
        in: query
        name: version
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registry.getServiceSubscribersResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Registry
  /api/registry/services:
    get:
      operationId: registry_getServices
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registry.getServiceListResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Registry
  /api/summary:
    get:
      operationId: statistics_getSummary
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statistics.getSummaryResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - Statistics
  /version:
    get:
      operationId: getVersion
      responses:
        "200":
          description: OK
          schema:
            type: object
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
